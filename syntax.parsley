operator = anything:x ?(x in '+*/-') -> LOp(x)

integer = ws (<digit+>:intv) ws -> LInt(intv)

float = ws (<integer>:leftv) "." (<integer>:rightv) ws -> LFloat("%s.%s" % (leftv, rightv))

left_paren = '('

right_paren = ')'

identifierChar = letter|(anything:x ?(x in identChars))

identifier = ws (<(identifierChar)+>:ident) ws -> LIdent(ident)

value = float|integer|identifier

application = ws '(' ws value:name ws <(value|application)*:ids> ws ')' ws -> App(name, ids)

infixexpr = (ws (value|application) ws operator ws (value|application))+

expression = value|application


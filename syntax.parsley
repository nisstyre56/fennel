operator = anything:x ?(x in '+*/-') -> LOp(x)

integer = ws ('-'|'+'?):sign ws (<digit+>:intv) ws -> LInt(intv, sign)

float = ws ('-'|'+'?):sign ws (<digit>?:leftv) "." (<digit>:rightv) ws -> LFloat("%s.%s" % (leftv if leftv is not None else "0", rightv), sign)

left_paren = '('

right_paren = ')'

identifierChar = letter|(anything:x ?(x in identChars))

identifier = ws (<(identifierChar)+>:ident) ws -> LIdent(ident)

value = float|integer|identifier

application = ws '(' ws value:name ws <(value|application)*:ids> ws ')' ws -> App(name, ids)

expression = value|application
